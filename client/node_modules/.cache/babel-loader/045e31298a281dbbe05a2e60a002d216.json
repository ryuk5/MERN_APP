{"ast":null,"code":"//For communicating with the back-end \n//1-import axios\nimport axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport { tokenConfig } from './authActions'; //2-add the dispatch with this syntax (this is where thunk comes in to make async. req)\n//we will use the dispatch to send the type along with the data that we get from our req.\n\nexport const getItems = () => dispatch => {\n  //3-we call the setItemLoading() to set the value of loading to true \n  //ya3ni 9a3ed njib fi data from an api\n  //we will call dispatch and pass to it any of our actions\n  dispatch(setItemsLoading()); //4-then we wanna make our req to the back-end\n\n  axios.get('/api/items') //that call will return a promise\n  .then(res => {\n    //houni kél data jétna from our server\n    dispatch({\n      //houni dispatch will take an object fih el type of the actions + a payload fih él data éli jébnéha mél server\n      type: GET_ITEMS,\n      payload: res.data\n    });\n  }); //5-go to the reducer and make look at the code\n};\nexport const deleteItem = id => dispatch => {\n  axios.delete(`/api/items/${id}`).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })); //we take care from deleting the post from the DB and the UI by sending an action to the reducer\n};\nexport const addItem = item => dispatch => {\n  axios.post('/api/items', item) //we are making a post req. so we are passing some data\n  .then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data //we are sending to the reducer the new item that was inserted in the DB\n\n  }));\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["D:/Learn_the_MERN_Stack/mern_shopping_list/client/src/actions/itemActions.js"],"names":["axios","GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","tokenConfig","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","deleteItem","id","delete","addItem","item","post"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,aAA3C,QAAgE,SAAhE;AAEA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtC;AACA;AACA;AACAA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR,CAJsC,CAMtC;;AACAR,EAAAA,KAAK,CAACS,GAAN,CAAU,YAAV,EAAwB;AAAxB,GACKC,IADL,CACUC,GAAG,IAAI;AACT;AACAJ,IAAAA,QAAQ,CAAC;AAAE;AACPK,MAAAA,IAAI,EAAEX,SADD;AAELY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAPL,EAPsC,CAelC;AAEP,CAjBM;AAmBP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQT,QAAQ,IAAI;AAC1CP,EAAAA,KAAK,CAACiB,MAAN,CAAc,cAAaD,EAAG,EAA9B,EACKN,IADL,CACUC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAET,WADY;AAElBU,IAAAA,OAAO,EAAEG;AAFS,GAAD,CADzB,EAD0C,CAMtC;AACP,CAPM;AASP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAUZ,QAAQ,IAAI;AACzCP,EAAAA,KAAK,CAACoB,IAAN,CAAW,YAAX,EAAyBD,IAAzB,EAA+B;AAA/B,GACKT,IADL,CACUC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEV,QADY;AAElBW,IAAAA,OAAO,EAAEF,GAAG,CAACG,IAFK,CAEA;;AAFA,GAAD,CADzB;AAKH,CANM;AAQP,OAAO,MAAMN,eAAe,GAAG,MAAM;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM","sourcesContent":["//For communicating with the back-end \r\n//1-import axios\r\nimport axios from 'axios';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\r\n\r\nimport { tokenConfig } from './authActions';\r\n\r\n//2-add the dispatch with this syntax (this is where thunk comes in to make async. req)\r\n//we will use the dispatch to send the type along with the data that we get from our req.\r\nexport const getItems = () => dispatch => {\r\n    //3-we call the setItemLoading() to set the value of loading to true \r\n    //ya3ni 9a3ed njib fi data from an api\r\n    //we will call dispatch and pass to it any of our actions\r\n    dispatch(setItemsLoading());\r\n\r\n    //4-then we wanna make our req to the back-end\r\n    axios.get('/api/items') //that call will return a promise\r\n        .then(res => {\r\n            //houni kél data jétna from our server\r\n            dispatch({ //houni dispatch will take an object fih el type of the actions + a payload fih él data éli jébnéha mél server\r\n                type: GET_ITEMS,\r\n                payload: res.data\r\n            }) \r\n        })\r\n        //5-go to the reducer and make look at the code\r\n\r\n};\r\n\r\nexport const deleteItem = (id) => dispatch => {\r\n    axios.delete(`/api/items/${id}`)\r\n        .then(res => dispatch({\r\n            type: DELETE_ITEM,\r\n            payload: id\r\n        }))\r\n        //we take care from deleting the post from the DB and the UI by sending an action to the reducer\r\n};\r\n\r\nexport const addItem = (item) => dispatch => {\r\n    axios.post('/api/items', item) //we are making a post req. so we are passing some data\r\n        .then(res => dispatch({\r\n            type: ADD_ITEM,\r\n            payload: res.data //we are sending to the reducer the new item that was inserted in the DB\r\n        }))\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}