{"ast":null,"code":"//1-importing axios\nimport axios from 'axios'; //9-importing the fn. that will handle our errors\n\nimport { returnErrors } from './errorActions'; //2-importing the types need it\n\nimport { USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from './types'; //3-Check token & load user\n\n/** madémna bch nésta3mlolu an async. call lézém nesta3méll él dispatch  \r\n *  I want to be able to get parts of the state méllé5er 7achti bél token éli houa mawjoud él state\r\n *  along with dispatch bch n3adi une fn. esmha getState té5ouli él attr. éli 7achti bih mél state\r\n *  don't forget to wrap dispatch 1st param and getState 2sec param in parentheses\r\n */\n\nexport const loadUser = () => (dispatch, getState) => {\n  //houni 3adina getState 5ater 3ana access él state of redux\n  //fn. body                                          //c'est le syxtaxe kiféch i access the state mél actions bté3i\n  //4-dispatch user loading 5ater bch njibou mél DB\n  //User loading\n  dispatch({\n    type: USER_LOADING\n  }); //we wanna do that b4 anything\n  //8-fetching the user\n\n  axios.get('/api/auth/user', tokenConfig(getState)) //zédna 3adina él headers éli zédnéhom lél req\n  .then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data //this object contains the user object +token éli nraj3ou fih mél server\n\n  })) //if there is an issue\n  .catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n}; //Register User action\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => dispatch => {\n  //houni bch nab3thou post req. to the server to register the user\n  //Steps\n  //1-Headers of the req.\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //2-Req. Body or the Req. Data that we're going to send to the server (éli hiya bch tkoune name, email and password)\n\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  }); //esta3malna this method 5ater we're taking a JS object that we want to turn it into JSON Data\n  //3-we are ready to make our Req.\n\n  axios.post('/api/users', body, config).then(res => dispatch({\n    type: REGISTER_SUCCESS,\n    //everything went ok and the user was created\n    payload: res.data //kén nchoufou l api fél serve él response bch tkoune our user object man8ir él pwd + le token all that data is going to the reducer to be set\n\n  })).catch(err => {\n    //if something went wrong\n    //i wanna dispatch 2 things\n    //tawa i wanna use the return errors that we created\n    //to dipslay to the user the errors\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  });\n};\n/* ------------------------tokenConfig (it's a helper function to get the token)--------------------------------------------------*/\n//Setup config/headers and token\n\nexport const tokenConfig = getState => {\n  //5-Getting the token from local storage\n  const token = getState().auth.token; // !!! esta3malt la fn. getState().name_of_reducer.attr !!!\n  //6-Adding headers to my req. using axios\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; //7-verify if the toekn exists we will add it to the headers\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n    /** ya3ni éna 3andi token fél localStorage 7atinéh fél state\r\n        * zédna 7atina él token éli jébnéh mél localStorage\r\n          fél headers bta3 él req éli bch tétb3ath lél server*/\n  }\n\n  return config;\n};\n/** 1-our fnc. tokenConfig take the getState as a parameter \r\n *  5ater getState hiya él fn. éli bch téjbédli él token mél redux state bté3i\r\n *  2-Now any time we need to send the token to a certain endpoint we just simply call \r\n *  tokenConfig(getState) like we did in the axios fél star 34 \r\n *   axios.get('/api/auth/user', tokenConfig(getState))\r\n * \r\n *  7ata law in diff. file we just import it 5ater here we are exporting it and then use it\r\n*/\n\n/* ------------------------end tokenConfig--------------------------------------------------*/","map":{"version":3,"sources":["D:/Learn_the_MERN_Stack/mern_shopping_list/client/src/actions/authActions.js"],"names":["axios","returnErrors","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","catch","err","response","status","register","name","email","password","config","headers","body","JSON","stringify","post","token","auth"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,aAJJ,EAKIC,UALJ,EAMIC,cANJ,EAOIC,gBAPJ,EAQIC,aARJ,QASO,SATP,C,CAWA;;AAEA;;;;;;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAE;AACpD;AAEA;AACA;AACAD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR,CALkD,CAKhB;AAElC;;AACAF,EAAAA,KAAK,CAACc,GAAN,CAAU,gBAAV,EAA4BC,WAAW,CAACH,QAAD,CAAvC,EAAmD;AAAnD,GACKI,IADL,CACUC,GAAG,IAAIN,QAAQ,CAAC;AAClBE,IAAAA,IAAI,EAAEV,WADY;AAElBe,IAAAA,OAAO,EAAED,GAAG,CAACE,IAFK,CAEA;;AAFA,GAAD,CADzB,EAKI;AALJ,GAMKC,KANL,CAMWC,GAAG,IAAI;AACVV,IAAAA,QAAQ,CAACV,YAAY,CAACoB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGH,GAXL;AAYH,CApBM,C,CAsBP;;AACA,OAAO,MAAMoB,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+BhB,QAAQ,IAAI;AAC/D;AACA;AACA;AACA,QAAMiB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CAJ+D,CAU/D;;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb,CAX+D,CAWJ;AAE3D;;AACA3B,EAAAA,KAAK,CAACiC,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,EACKZ,IADL,CACUC,GAAG,IAAIN,QAAQ,CAAC;AAClBE,IAAAA,IAAI,EAAEL,gBADY;AACM;AACxBU,IAAAA,OAAO,EAAED,GAAG,CAACE,IAFK,CAEM;;AAFN,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAI;AACV;AACA;AAEA;AACA;AACAV,IAAAA,QAAQ,CAACV,YAAY,CAACoB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AAEAZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEJ;AADD,KAAD,CAAR;AAIH,GAjBL;AAkBH,CAhCM;AAqCP;AACA;;AACA,OAAO,MAAMM,WAAW,GAAGH,QAAQ,IAAI;AACnC;AACA,QAAMsB,KAAK,GAAGtB,QAAQ,GAAGuB,IAAX,CAAgBD,KAA9B,CAFmC,CAEE;AAErC;;AACA,QAAMN,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CALmC,CAWnC;;AACA,MAAIK,KAAJ,EAAW;AACPN,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCK,KAAjC;AAAwC;;;AAG3C;;AAED,SAAON,MAAP;AACH,CAnBM;AAqBP;;;;;;;;;AASA","sourcesContent":["//1-importing axios\r\nimport axios from 'axios';\r\n\r\n//9-importing the fn. that will handle our errors\r\nimport { returnErrors } from './errorActions';\r\n\r\n//2-importing the types need it\r\nimport {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from './types';\r\n\r\n//3-Check token & load user\r\n\r\n/** madémna bch nésta3mlolu an async. call lézém nesta3méll él dispatch  \r\n *  I want to be able to get parts of the state méllé5er 7achti bél token éli houa mawjoud él state\r\n *  along with dispatch bch n3adi une fn. esmha getState té5ouli él attr. éli 7achti bih mél state\r\n *  don't forget to wrap dispatch 1st param and getState 2sec param in parentheses\r\n */\r\nexport const loadUser = () => (dispatch, getState) => { //houni 3adina getState 5ater 3ana access él state of redux\r\n    //fn. body                                          //c'est le syxtaxe kiféch i access the state mél actions bté3i\r\n\r\n    //4-dispatch user loading 5ater bch njibou mél DB\r\n    //User loading\r\n    dispatch({ type: USER_LOADING }); //we wanna do that b4 anything\r\n\r\n    //8-fetching the user\r\n    axios.get('/api/auth/user', tokenConfig(getState)) //zédna 3adina él headers éli zédnéhom lél req\r\n        .then(res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data //this object contains the user object +token éli nraj3ou fih mél server\r\n        }))\r\n        //if there is an issue\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n        });\r\n};\r\n\r\n//Register User action\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n    //houni bch nab3thou post req. to the server to register the user\r\n    //Steps\r\n    //1-Headers of the req.\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //2-Req. Body or the Req. Data that we're going to send to the server (éli hiya bch tkoune name, email and password)\r\n    const body = JSON.stringify({ name, email, password });    //esta3malna this method 5ater we're taking a JS object that we want to turn it into JSON Data\r\n\r\n    //3-we are ready to make our Req.\r\n    axios.post('/api/users', body, config)\r\n        .then(res => dispatch({\r\n            type: REGISTER_SUCCESS, //everything went ok and the user was created\r\n            payload: res.data       //kén nchoufou l api fél serve él response bch tkoune our user object man8ir él pwd + le token all that data is going to the reducer to be set\r\n        }))\r\n        .catch(err => {\r\n            //if something went wrong\r\n            //i wanna dispatch 2 things\r\n            \r\n            //tawa i wanna use the return errors that we created\r\n            //to dipslay to the user the errors\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            \r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n\r\n        });\r\n}\r\n\r\n\r\n\r\n\r\n/* ------------------------tokenConfig (it's a helper function to get the token)--------------------------------------------------*/\r\n//Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    //5-Getting the token from local storage\r\n    const token = getState().auth.token; // !!! esta3malt la fn. getState().name_of_reducer.attr !!!\r\n\r\n    //6-Adding headers to my req. using axios\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n\r\n    //7-verify if the toekn exists we will add it to the headers\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token; /** ya3ni éna 3andi token fél localStorage 7atinéh fél state\r\n                                                    * zédna 7atina él token éli jébnéh mél localStorage\r\n                                                      fél headers bta3 él req éli bch tétb3ath lél server*/\r\n    }\r\n\r\n    return config;\r\n}\r\n\r\n/** 1-our fnc. tokenConfig take the getState as a parameter \r\n *  5ater getState hiya él fn. éli bch téjbédli él token mél redux state bté3i\r\n *  2-Now any time we need to send the token to a certain endpoint we just simply call \r\n *  tokenConfig(getState) like we did in the axios fél star 34 \r\n *   axios.get('/api/auth/user', tokenConfig(getState))\r\n * \r\n *  7ata law in diff. file we just import it 5ater here we are exporting it and then use it\r\n*/\r\n\r\n/* ------------------------end tokenConfig--------------------------------------------------*/"]},"metadata":{},"sourceType":"module"}